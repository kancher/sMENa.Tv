// lib/ai-service.ts

type AIModel = 'chat' | 'code';

const AI_WORKER_URL = 'https://smena-ai-worker.smenatv.workers.dev';

export class AIService {
  static async getResponse(prompt: string, mode: AIModel): Promise<string> {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π Cloudflare Worker AI!
      const response = await fetch(AI_WORKER_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          message: prompt,
          mode: mode
        })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      
      if (data.error) {
        throw new Error(data.error);
      }

      return data.reply;

    } catch (error) {
      console.error('Real AI failed, using fallback:', error);
      // –ï—Å–ª–∏ Worker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∏–º–∏—Ç–∞—Ü–∏—é
      return this.getFallbackResponse(prompt, mode);
    }
  }

  private static async getFallbackResponse(prompt: string, mode: AIModel): Promise<string> {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 800 + Math.random() * 1200));

    const lowerPrompt = prompt.toLowerCase();

    if (mode === 'code') {
      return this.generateCodeResponse(lowerPrompt, prompt);
    } else {
      return this.generateChatResponse(lowerPrompt, prompt);
    }
  }

  private static generateCodeResponse(lowerPrompt: string, originalPrompt: string): string {
    // –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    if (lowerPrompt.includes('javascript') || lowerPrompt.includes('js')) {
      return `–í–æ—Ç —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ JavaScript:\n\n\`\`\`javascript\n// ${originalPrompt}\nfunction solution() {\n  // –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –∑–¥–µ—Å—å\n  console.log("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!");\n  return "–ì–æ—Ç–æ–≤–æ!";\n}\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nsolution();\n\`\`\`\n\n–≠—Ç–æ –±–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞. –ù—É–∂–Ω–∞ –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–º–æ—â—å?`;
    }

    if (lowerPrompt.includes('python') || lowerPrompt.includes('py')) {
      return `–í–æ—Ç —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ Python:\n\n\`\`\`python\n# ${originalPrompt}\ndef main():\n    print("Hello World")\n    return "–£—Å–ø–µ—à–Ω–æ!"\n\nif __name__ == "__main__":\n    main()\n\`\`\`\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥! üêç`;
    }

    if (lowerPrompt.includes('html') || lowerPrompt.includes('css')) {
      return `–í–æ—Ç –ø—Ä–∏–º–µ—Ä –≤—ë—Ä—Å—Ç–∫–∏:\n\n\`\`\`html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>${originalPrompt}</title>\n    <style>\n        body { \n            font-family: Arial, sans-serif;\n            margin: 40px;\n        }\n    </style>\n</head>\n<body>\n    <h1>–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h1>\n</body>\n</html>\n\`\`\``;
    }

    if (lowerPrompt.includes('react')) {
      return `–í–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç React:\n\n\`\`\`jsx\nimport React from 'react';\n\nfunction ${this.capitalizeFirst(originalPrompt.split(' ')[0]) || 'MyComponent'}() {\n  return (\n    <div>\n      <h1>${originalPrompt}</h1>\n      <p>–í–∞—à –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–æ—Ç–æ–≤!</p>\n    </div>\n  );\n}\n\nexport default ${this.capitalizeFirst(originalPrompt.split(' ')[0]) || 'MyComponent'};\n\`\`\`\n\n–≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. ‚öõÔ∏è`;
    }

    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    const codeResponses = [
      `–î–ª—è –∑–∞–¥–∞—á–∏ "${originalPrompt}" —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n- –†–∞–∑–±–∏—Ç—å –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏\n- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n- –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫\n- –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n\n–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —è–∑—ã–∫–æ–º?`,
      
      `–û—Ç–ª–∏—á–Ω–∞—è –∑–∞–¥–∞—á–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é! üöÄ\n\n–°–æ–≤–µ—Ç—ã:\n1. –°–Ω–∞—á–∞–ª–∞ —Å–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º\n2. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Å–µ–≤–¥–æ–∫–æ–¥\n3. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ—ç—Ç–∞–ø–Ω–æ\n4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ\n\n–•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —è –ø–æ–º–æ–≥ —Å –∫–æ–¥–æ–º?`,
      
      `–ü–æ —Ç–µ–º–µ "${originalPrompt}":\n\n\`\`\`javascript\n// –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã\nclass Solution {\n  constructor() {\n    // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è\n  }\n  \n  solve(input) {\n    // –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞\n    return input;\n  }\n}\n\`\`\``
    ];

    return codeResponses[Math.floor(Math.random() * codeResponses.length)];
  }

  private static generateChatResponse(lowerPrompt: string, originalPrompt: string): string {
    // –£–º–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (lowerPrompt.includes('–ø—Ä–∏–≤–µ—Ç') || lowerPrompt.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤') || lowerPrompt.includes('hello')) {
      const greetings = [
        "–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ —Å –≤–∞–º–∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è! üòä",
        "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!",
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞—à –¥–µ–Ω—å?"
      ];
      return greetings[Math.floor(Math.random() * greetings.length)];
    }

    // –í–æ–ø—Ä–æ—Å –æ –¥–µ–ª–∞—Ö
    if (lowerPrompt.includes('–∫–∞–∫ –¥–µ–ª') || lowerPrompt.includes('–∫–∞–∫ —Ç—ã') || lowerPrompt.includes('how are')) {
      const statuses = [
        "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –†–∞–±–æ—Ç–∞—é –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º sMeNa.Tv üöÄ –ê —É –≤–∞—Å –∫–∞–∫ –¥–µ–ª–∞?",
        "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ü–æ–º–æ–≥–∞—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä—É—Ç—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –ê –≤—ã –∫–∞–∫?",
        "–í—Å—ë –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –ì–æ—Ç–æ–≤–∞ –∫ –Ω–æ–≤—ã–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –±–µ—Å–µ–¥–∞–º. üòÑ",
        "–û—Ç–ª–∏—á–Ω–æ! –°–µ–≥–æ–¥–Ω—è —É–∂–µ –ø–æ–º–æ–≥–ª–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º. –†–∞–¥–∞ –≤–∞–º!"
      ];
      return statuses[Math.floor(Math.random() * statuses.length)];
    }

    // –í–æ–ø—Ä–æ—Å—ã –æ sMeNa.Tv
    if (lowerPrompt.includes('smena') || lowerPrompt.includes('—Å–º–µ–Ω–∞') || lowerPrompt.includes('—Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏–µ')) {
      return "sMeNa.Tv - —ç—Ç–æ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Ç–µ–ª–µ–≤–∏–¥–µ–Ω–∏—è! üé¨ –ú—ã —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –ø—Ä—è–º—ã—Ö —ç—Ñ–∏—Ä–æ–≤, –æ–±—â–µ–Ω–∏—è –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞. –°–∫–æ—Ä–æ –∑–∞–ø—É—Å–∫ - –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ! üöÄ";
    }

    // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    if (lowerPrompt.includes('—Å–ø–∞—Å–∏–±–æ') || lowerPrompt.includes('–±–ª–∞–≥–æ–¥–∞—Ä') || lowerPrompt.includes('thank')) {
      return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –í—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –ø–æ–º–æ—á—å! üòä –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!";
    }

    // –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    if (lowerPrompt.includes('—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å') || lowerPrompt.includes('–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç') || lowerPrompt.includes('help')) {
      return "–Ø –º–æ–≥—É:\n\nüí¨ **–û–±—â–∞—Ç—å—Å—è** –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã\nüíª **–ü–æ–º–æ–≥–∞—Ç—å —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º** \nüöÄ **–†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ sMeNa.Tv**\nüéØ **–î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏**\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –≤—ã—à–µ –∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã!";
    }

    // –û–±—â–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const chatResponses = [
      `–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü–æ —Ç–µ–º–µ "${originalPrompt}" –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ì–ª–∞–≤–Ω–æ–µ - –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å! üéØ`,
      
      `–û—Ç–ª–∏—á–Ω–∞—è –º—ã—Å–ª—å! üßê –î–∞–≤–∞–π—Ç–µ –ø–æ—Ä–∞—Å—Å—É–∂–¥–∞–µ–º –≤–º–µ—Å—Ç–µ... \n\n–ù–∞ –º–æ–π –≤–∑–≥–ª—è–¥, –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã —ç—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.`,
      
      `–ü–æ–Ω–∏–º–∞—é –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ "${originalPrompt}". –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ.`,
      
      `–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–∞–∫–æ–π —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! ü§î \n\n–î—É–º–∞—é, –∑–¥–µ—Å—å —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤...`,
      
      `–û, —ç—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –ü–æ —Ç–µ–º–µ "${originalPrompt}" —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º—ã—Å–ª–µ–π...`
    ];

    return chatResponses[Math.floor(Math.random() * chatResponses.length)];
  }

  private static capitalizeFirst(str: string): string {
    return str.charAt(0).toUpperCase() + str.slice(1);
  }
}
