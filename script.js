// –°—á–µ—Ç—á–∏–∫ –¥–æ –∑–∞–ø—É—Å–∫–∞ 4 –Ω–æ—è–±—Ä—è 2025 –≥–æ–¥–∞
function updateCountdown() {
    const targetDate = new Date('2025-11-04').getTime();
    const now = new Date().getTime();
    const difference = targetDate - now;

    if (difference < 0) {
        document.querySelector('.status-text').textContent = '–ó–ê–ü–£–©–ï–ù–û';
        document.querySelector('.status-dot').style.background = '#30d158';
        document.querySelector('.status-dot').style.animation = 'none';
        return;
    }

    const days = Math.floor(difference / (1000 * 60 * 60 * 24));
    const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((difference % (1000 * 60)) / 1000);

    document.getElementById('days').textContent = days.toString().padStart(2, '0');
    document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
    document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
    document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
}

// –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
function createParticles(e) {
    const particle = document.createElement('div');
    particle.classList.add('particle');
    
    const x = e.clientX;
    const y = e.clientY;
    
    // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    const angle = Math.random() * Math.PI * 2;
    const distance = Math.random() * 50 + 20;
    const tx = Math.cos(angle) * distance;
    const ty = Math.sin(angle) * distance;
    
    particle.style.setProperty('--tx', `${tx}px`);
    particle.style.setProperty('--ty', `${ty}px`);
    particle.style.left = `${x}px`;
    particle.style.top = `${y}px`;
    
    document.body.appendChild(particle);
    
    // –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—Ü—É –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        particle.remove();
    }, 1500);
}

// –ú–∏–∫—Ä–æ-–∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function setupMicroInteractions() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ —Å—á–µ—Ç—á–∏–∫
    document.querySelectorAll('.time-unit').forEach(unit => {
        unit.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px) scale(1.05)';
        });
        
        unit.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(-2px) scale(1)';
        });
    });
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ
    document.querySelector('.macos-title').addEventListener('click', function() {
        this.style.transform = 'scale(0.95)';
        setTimeout(() => {
            this.style.transform = 'scale(1)';
        }, 150);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    updateCountdown();
    setInterval(updateCountdown, 1000);
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    setupMicroInteractions();
    
    // –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü (—Ç–æ–ª—å–∫–æ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ)
    if (window.innerWidth > 768) {
        document.addEventListener('mousemove', function(e) {
            // –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 20%
            if (Math.random() < 0.2) {
                createParticles(e);
            }
        });
    }
    
    console.log('üéØ Ultra Minimalist Theme loaded');
});

// –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∏ –∑–∞–ø—Ä–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è
document.addEventListener('selectstart', function(e) {
    e.preventDefault();
});

document.addEventListener('contextmenu', function(e) {
    e.preventDefault();
});
